{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/a.micole/src/components/CustomUpload/ImageUpload.js\";\nimport React from \"react\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\nimport * as mainActions from \"../../actions/mainActions\";\nimport { connect } from 'react-redux';\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n      alert(file);\n      this.props.setArchivoSubir(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); // this.state.file is the file/image uploaded\n    // in this function you can save the image (this.state.file) on form submit\n    // you have to call it yourself\n  }\n\n  handleClick() {\n    this.refs.fileInput.click();\n  }\n\n  handleRemove() {\n    this.setState({\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage\n    });\n    this.refs.fileInput.value = null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fileinput text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleImageChange,\n      ref: \"fileInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"thumbnail\" + (this.props.avatar ? \" img-circle\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imagePreviewUrl,\n      alt: \"...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, this.state.file === null ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-round\",\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.props.avatar ? \"Add Photo\" : \"Selecciona el archivo\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-round\",\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Modificar\"), this.props.avatar ? /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }\n    }) : null, /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      className: \"btn-round\",\n      onClick: () => this.handleRemove(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), \"Quitar\"))));\n  }\n\n}\n\nImageUpload.propTypes = {\n  avatar: PropTypes.bool\n};\n\nconst mapStateToProps = reducers => {\n  return reducers.mainReducer;\n};\n\nexport default connect(mapStateToProps, mainActions)(ImageUpload);","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole/src/components/CustomUpload/ImageUpload.js"],"names":["React","PropTypes","Button","defaultImage","defaultAvatar","mainActions","connect","ImageUpload","Component","constructor","props","state","file","imagePreviewUrl","avatar","handleImageChange","bind","handleSubmit","handleClick","handleRemove","e","preventDefault","reader","FileReader","target","files","onloadend","setState","result","alert","setArchivoSubir","readAsDataURL","refs","fileInput","click","value","render","propTypes","bool","mapStateToProps","reducers","mainReducer"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nimport { Button } from \"reactstrap\";\n\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\nimport * as mainActions from \"../../actions/mainActions\";\nimport { connect } from 'react-redux';\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage,\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n  handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n      alert(file);\n      this.props.setArchivoSubir(file);\n    };\n    reader.readAsDataURL(file);\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    // this.state.file is the file/image uploaded\n    // in this function you can save the image (this.state.file) on form submit\n    // you have to call it yourself\n  }\n  handleClick() {\n    this.refs.fileInput.click();\n  }\n  handleRemove() {\n    this.setState({\n      file: null,\n      imagePreviewUrl: this.props.avatar ? defaultAvatar : defaultImage,\n    });\n    this.refs.fileInput.value = null;\n  }\n  render() {\n    return (\n      <div className=\"fileinput text-center\">\n        <input type=\"file\" onChange={this.handleImageChange} ref=\"fileInput\" />\n        <div className={\"thumbnail\" + (this.props.avatar ? \" img-circle\" : \"\")}>\n          <img src={this.state.imagePreviewUrl} alt=\"...\" />\n        </div>\n        <div>\n          {this.state.file === null ? (\n            <Button className=\"btn-round\" onClick={() => this.handleClick()}>\n              {this.props.avatar ? \"Add Photo\" : \"Selecciona el archivo\"}\n            </Button>\n          ) : (\n            <span>\n              <Button className=\"btn-round\" onClick={() => this.handleClick()}>\n                Modificar\n              </Button>\n              {this.props.avatar ? <br /> : null}\n              <Button\n                color=\"danger\"\n                className=\"btn-round\"\n                onClick={() => this.handleRemove()}\n              >\n                <i className=\"fa fa-times\" />\n                Quitar\n              </Button>\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nImageUpload.propTypes = {\n  avatar: PropTypes.bool,\n};\n\nconst mapStateToProps = (reducers) => {\n  return reducers.mainReducer;\n}\n\nexport default connect(mapStateToProps, mainActions )(ImageUpload);"]},"metadata":{},"sourceType":"module"}