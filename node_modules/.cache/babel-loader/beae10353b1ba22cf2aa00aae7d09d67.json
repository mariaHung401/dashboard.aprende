{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/a.micole_rebe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/a.micole_rebe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport const setColegio = (colegio, grado, materia) => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          dispatch({\n            type: 'set_colegio',\n            payload: [colegio, grado, materia]\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const verColegio = () => /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          dispatch({\n            type: 'ver_colegio'\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport const setArchivoSubir = archivo => dispatch => {\n  dispatch({\n    type: 'set_archivosubir',\n    payload: archivo\n  });\n};\nexport const verAlumnos = (id, grado, materia) => /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n    var url, respuesta, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(grado);\n          url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/veralumnos?id=' + id + '&grado=' + grado + '&materia=' + materia;\n          _context3.next = 4;\n          return fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            Accept: 'application/json'\n          }).catch(error => {\n            console.log(error);\n          });\n\n        case 4:\n          respuesta = _context3.sent;\n          _context3.next = 7;\n          return respuesta.json();\n\n        case 7:\n          result = _context3.sent;\n          dispatch({\n            type: 'ver_alumnos',\n            payload: result\n          });\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport const verCredenciales = () => /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n    var url, respuesta, insercion;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/creds';\n          _context4.next = 3;\n          return fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'default',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            Accept: 'application/json'\n          }).catch(error => {\n            console.log(error);\n          });\n\n        case 3:\n          respuesta = _context4.sent;\n          _context4.next = 6;\n          return respuesta.json();\n\n        case 6:\n          insercion = _context4.sent;\n          dispatch({\n            type: 'ver_credenciales',\n            payload: insercion\n          });\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n\n  return function (_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole_rebe/client/src/actions/mainActions.js"],"names":["setColegio","colegio","grado","materia","dispatch","type","payload","verColegio","setArchivoSubir","archivo","verAlumnos","id","console","log","url","fetch","method","headers","Accept","catch","error","respuesta","json","result","verCredenciales","mode","cache","insercion"],"mappings":";;AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB;AAAA,sEAA6B,iBAAOC,QAAP;AAAA;AAAA;AAAA;AACrDA,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAE,aADC;AAEPC,YAAAA,OAAO,EAAC,CAACL,OAAD,EAASC,KAAT,EAAeC,OAAf;AAFD,WAAD,CAAR;;AADqD;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA,GAAnB;AAMP,OAAO,MAAMI,UAAU,GAAE;AAAA,uEAAM,kBAAOH,QAAP;AAAA;AAAA;AAAA;AAC7BA,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAE;AADC,WAAD,CAAR;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;;AAAA;AAAA;AAAA;AAAA,GAAlB;AAKP,OAAO,MAAMG,eAAe,GAAIC,OAAD,IAAeL,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE,kBADC;AAEPC,IAAAA,OAAO,EAAEG;AAFF,GAAD,CAAR;AAID,CALM;AAMP,OAAO,MAAMC,UAAU,GAAG,CAACC,EAAD,EAAKT,KAAL,EAAYC,OAAZ;AAAA,uEAAwB,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAChDQ,UAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACIY,UAAAA,GAF4C,GAExC,qIAAmIH,EAAnI,GAAsI,SAAtI,GAAgJT,KAAhJ,GAAsJ,WAAtJ,GAAkKC,OAF1H;AAAA;AAAA,iBAG1BY,KAAK,CAACD,GAAD,EAAM;AAC7BE,YAAAA,MAAM,EAAE,KADqB;AAE7BC,YAAAA,OAAO,EAAC;AACJ,8BAAgB;AADZ,aAFqB;AAK7BC,YAAAA,MAAM,EAAE;AALqB,WAAN,CAAL,CAOrBC,KAPqB,CAOfC,KAAK,IAAI;AACZR,YAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,WATqB,CAH0B;;AAAA;AAG5CC,UAAAA,SAH4C;AAAA;AAAA,iBAa7BA,SAAS,CAACC,IAAV,EAb6B;;AAAA;AAa5CC,UAAAA,MAb4C;AAchDnB,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAE,aADC;AAEPC,YAAAA,OAAO,EAAEiB;AAFF,WAAD,CAAR;;AAdgD;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,GAAnB;AAoBP,OAAO,MAAMC,eAAe,GAAI;AAAA,uEAAM,kBAAOpB,QAAP;AAAA;AAAA;AAAA;AAAA;AAC5BU,UAAAA,GAD4B,GACtB,yHADsB;AAAA;AAAA,iBAEZC,KAAK,CAACD,GAAD,EAAM;AAC7BE,YAAAA,MAAM,EAAE,MADqB;AAE7BS,YAAAA,IAAI,EAAE,MAFuB;AAG7BC,YAAAA,KAAK,EAAE,SAHsB;AAI7BT,YAAAA,OAAO,EAAC;AACJ,8BAAgB;AADZ,aAJqB;AAO7BC,YAAAA,MAAM,EAAE;AAPqB,WAAN,CAAL,CAQnBC,KARmB,CAQbC,KAAK,IAAI;AACdR,YAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,WAVqB,CAFY;;AAAA;AAE9BC,UAAAA,SAF8B;AAAA;AAAA,iBAaZA,SAAS,CAACC,IAAV,EAbY;;AAAA;AAa9BK,UAAAA,SAb8B;AAclCvB,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAAE,kBADD;AAELC,YAAAA,OAAO,EAAEqB;AAFJ,WAAD,CAAR;;AAdkC;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;;AAAA;AAAA;AAAA;AAAA,GAAzB","sourcesContent":["export const setColegio = (colegio, grado, materia) => async (dispatch) => {\n  dispatch({\n    type: 'set_colegio',\n    payload:[colegio,grado,materia]\n  })\n}\nexport const verColegio= () => async (dispatch) => {\n  dispatch({\n    type: 'ver_colegio',\n  })\n}\nexport const setArchivoSubir = (archivo) =>  (dispatch) => {\n  dispatch({\n    type: 'set_archivosubir',\n    payload: archivo\n  })\n}\nexport const verAlumnos = (id, grado, materia) => async (dispatch) => {\n  console.log(grado)\n  let url='https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/veralumnos?id='+id+'&grado='+grado+'&materia='+materia;\n  let respuesta = await fetch(url, {\n      method: 'GET',\n      headers:{\n          'Content-Type': 'application/json'\n      },\n      Accept: 'application/json',\n  })\n  .catch(error => {\n      console.log(error);\n  });\n  let result = await respuesta.json();\n  dispatch({\n    type: 'ver_alumnos',\n    payload: result\n  });\n}\n\nexport const verCredenciales =  () => async (dispatch) => {\n    const url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/creds';\n    let respuesta = await fetch(url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'default',\n        headers:{\n            'Content-Type': 'application/json'\n        },\n        Accept: 'application/json',\n    }).catch(error => {\n        console.log(error);\n    });\n    let insercion = await respuesta.json();\n    dispatch({\n        type: 'ver_credenciales',\n        payload: insercion\n    });\n  }\n"]},"metadata":{},"sourceType":"module"}