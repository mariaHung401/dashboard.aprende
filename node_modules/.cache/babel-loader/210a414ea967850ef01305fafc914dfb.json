{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/a.micole_rebe/client/src/views/Calendar.js\";\n\n/*!\n\n=========================================================\n* Paper Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // react component used to create a calendar with events on it\n\nimport { Calendar as ReactBigCalendar, momentLocalizer } from \"react-big-calendar\"; // dependency plugin for react-big-calendar\n\nimport moment from \"moment\"; // react component used to create alerts\n\nimport SweetAlert from \"react-bootstrap-sweetalert\"; // reactstrap components\n\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport { events } from \"variables/general.js\";\nconst localizer = momentLocalizer(moment);\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectedEvent = event => {\n      alert(event.title);\n    };\n\n    this.addNewEventAlert = slotInfo => {\n      this.setState({\n        alert: /*#__PURE__*/React.createElement(SweetAlert, {\n          input: true,\n          showCancel: true,\n          style: {\n            display: \"block\",\n            marginTop: \"-100px\"\n          },\n          title: \"Input something\",\n          onConfirm: e => this.addNewEvent(e, slotInfo),\n          onCancel: () => this.hideAlert(),\n          confirmBtnBsStyle: \"info\",\n          cancelBtnBsStyle: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        })\n      });\n    };\n\n    this.addNewEvent = (e, slotInfo) => {\n      var newEvents = this.state.events;\n      newEvents.push({\n        title: e,\n        start: slotInfo.start,\n        end: slotInfo.end\n      });\n      this.setState({\n        alert: null,\n        events: newEvents\n      });\n    };\n\n    this.hideAlert = () => {\n      this.setState({\n        alert: null\n      });\n    };\n\n    this.eventColors = (event, start, end, isSelected) => {\n      var backgroundColor = \"event-\";\n      event.color ? backgroundColor = backgroundColor + event.color : backgroundColor = backgroundColor + \"default\";\n      return {\n        className: backgroundColor\n      };\n    };\n\n    this.state = {\n      events: events,\n      alert: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, this.state.alert, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"ml-auto mr-auto\",\n      md: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactBigCalendar, {\n      selectable: true,\n      localizer: localizer,\n      events: this.state.events,\n      defaultView: \"month\",\n      scrollToTime: new Date(1970, 1, 1, 6),\n      defaultDate: new Date(),\n      onSelectEvent: event => this.selectedEvent(event),\n      onSelectSlot: slotInfo => this.addNewEventAlert(slotInfo),\n      eventPropGetter: this.eventColors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole_rebe/client/src/views/Calendar.js"],"names":["React","Calendar","ReactBigCalendar","momentLocalizer","moment","SweetAlert","Card","CardBody","Row","Col","events","localizer","Component","constructor","props","selectedEvent","event","alert","title","addNewEventAlert","slotInfo","setState","display","marginTop","e","addNewEvent","hideAlert","newEvents","state","push","start","end","eventColors","isSelected","backgroundColor","color","className","render","Date"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Paper Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react component used to create a calendar with events on it\nimport {\n  Calendar as ReactBigCalendar,\n  momentLocalizer,\n} from \"react-big-calendar\";\n// dependency plugin for react-big-calendar\nimport moment from \"moment\";\n// react component used to create alerts\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\n// reactstrap components\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\n\nimport { events } from \"variables/general.js\";\n\nconst localizer = momentLocalizer(moment);\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: events,\n      alert: null,\n    };\n  }\n  selectedEvent = (event) => {\n    alert(event.title);\n  };\n  addNewEventAlert = (slotInfo) => {\n    this.setState({\n      alert: (\n        <SweetAlert\n          input\n          showCancel\n          style={{ display: \"block\", marginTop: \"-100px\" }}\n          title=\"Input something\"\n          onConfirm={(e) => this.addNewEvent(e, slotInfo)}\n          onCancel={() => this.hideAlert()}\n          confirmBtnBsStyle=\"info\"\n          cancelBtnBsStyle=\"danger\"\n        />\n      ),\n    });\n  };\n  addNewEvent = (e, slotInfo) => {\n    var newEvents = this.state.events;\n    newEvents.push({\n      title: e,\n      start: slotInfo.start,\n      end: slotInfo.end,\n    });\n    this.setState({\n      alert: null,\n      events: newEvents,\n    });\n  };\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n  eventColors = (event, start, end, isSelected) => {\n    var backgroundColor = \"event-\";\n    event.color\n      ? (backgroundColor = backgroundColor + event.color)\n      : (backgroundColor = backgroundColor + \"default\");\n    return {\n      className: backgroundColor,\n    };\n  };\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          {this.state.alert}\n          <Row>\n            <Col className=\"ml-auto mr-auto\" md=\"10\">\n              <Card className=\"card-calendar\">\n                <CardBody>\n                  <ReactBigCalendar\n                    selectable\n                    localizer={localizer}\n                    events={this.state.events}\n                    defaultView=\"month\"\n                    scrollToTime={new Date(1970, 1, 1, 6)}\n                    defaultDate={new Date()}\n                    onSelectEvent={(event) => this.selectedEvent(event)}\n                    onSelectSlot={(slotInfo) => this.addNewEventAlert(slotInfo)}\n                    eventPropGetter={this.eventColors}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}