{"ast":null,"code":"import _slicedToArray from\"/Users/macbook/Desktop/a.micole_rebe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*eslint-disable*/import React from\"react\";import{useTable,useFilters,useAsyncDebounce,useSortBy,usePagination}from\"react-table\";import classnames from\"classnames\";// A great library for fuzzy filtering/sorting items\nimport matchSorter from\"match-sorter\";// react plugin used to create DropdownMenu for selecting items\nimport Select from\"react-select\";// reactstrap components\nimport{Container,Row,Col,FormGroup,Input}from\"reactstrap\";const url=\"https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/\";// Define a default UI for filtering\nfunction DefaultColumnFilter({column:{filterValue,preFilteredRows,setFilter}}){const count=preFilteredRows.length;return/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Input,{placeholder:\"Buscar \".concat(count,\" Registros...\"),type:\"text\",onChange:e=>{setFilter(e.target.value||undefined);// Set undefined to remove the filter entirely\n}}));}function fuzzyTextFilterFn(rows,id,filterValue){return matchSorter(rows,filterValue,{keys:[row=>row.values[id]]});}// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove=val=>!val;// Our table component\nfunction Table({columns,data}){const _React$useState=React.useState({value:10,label:\"10 filas\"}),_React$useState2=_slicedToArray(_React$useState,2),numberOfRows=_React$useState2[0],setNumberOfRows=_React$useState2[1];const _React$useState3=React.useState({value:0,label:\"Pagina 1\"}),_React$useState4=_slicedToArray(_React$useState3,2),pageSelect=_React$useState4[0],handlePageSelect=_React$useState4[1];const filterTypes=React.useMemo(()=>({// Add a new fuzzyTextFilterFn filter type.\nfuzzyText:fuzzyTextFilterFn,// Or, override the default text filter to use\n// \"startWith\"\ntext:(rows,id,filterValue)=>{return rows.filter(row=>{const rowValue=row.values[id];return rowValue!==undefined?String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()):true;});}}),[]);const defaultColumn=React.useMemo(()=>({// Let's set up our default Filter UI\nFilter:DefaultColumnFilter}),[]);const _useTable=useTable({columns,data,defaultColumn,// Be sure to pass the defaultColumn option\nfilterTypes,initialState:{pageSize:10,pageIndex:0}},useFilters,// useFilters!\nuseSortBy,usePagination),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,page=_useTable.page,prepareRow=_useTable.prepareRow,state=_useTable.state,visibleColumns=_useTable.visibleColumns,nextPage=_useTable.nextPage,pageOptions=_useTable.pageOptions,pageCount=_useTable.pageCount,previousPage=_useTable.previousPage,canPreviousPage=_useTable.canPreviousPage,canNextPage=_useTable.canNextPage,setPageSize=_useTable.setPageSize,gotoPage=_useTable.gotoPage;// We don't want to render all of the rows for this example, so cap\n// it for this use case\n// const firstPageRows = rows.slice(0, 10);\nlet pageSelectData=Array.apply(null,Array(pageOptions.length)).map(function(){});let numberOfRowsData=[5,10,20,25,50,100];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"ReactTable -striped -highlight primary-pagination\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pagination-top\"},/*#__PURE__*/React.createElement(\"div\",{className:\"-pagination\"},/*#__PURE__*/React.createElement(\"div\",{className:\"-previous\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:()=>previousPage(),disabled:!canPreviousPage,className:\"-btn\"},\"Anterior\")),/*#__PURE__*/React.createElement(\"div\",{className:\"-center\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,{className:\"justify-content-center\"},/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"6\",xs:\"12\"},/*#__PURE__*/React.createElement(Select,{className:\"react-select primary\",classNamePrefix:\"react-select\",name:\"pageSelect\",value:pageSelect,onChange:value=>{gotoPage(value.value);handlePageSelect(value);},options:pageSelectData.map((prop,key)=>{return{value:key,label:\"Pagina \"+(key+1)};}),placeholder:\"Selecciona la Pagina\"})),/*#__PURE__*/React.createElement(Col,{md:\"4\",sm:\"6\",xs:\"12\"},/*#__PURE__*/React.createElement(Select,{className:\"react-select primary\",classNamePrefix:\"react-select\",name:\"numberOfRows\",value:numberOfRows,onChange:value=>{setPageSize(value.value);setNumberOfRows(value);},options:numberOfRowsData.map(prop=>{return{value:prop,label:prop+\" Filas\"};}),placeholder:\"Selecciona las Filas\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"-next\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:()=>nextPage(),disabled:!canNextPage,className:\"-btn\"},\"Siguiente\")))),/*#__PURE__*/React.createElement(\"table\",Object.assign({},getTableProps(),{className:\"rt-table\"}),/*#__PURE__*/React.createElement(\"thead\",{className:\"rt-thead -header\"},headerGroups.map(headerGroup=>/*#__PURE__*/React.createElement(\"tr\",Object.assign({},headerGroup.getHeaderGroupProps(),{className:\"rt-tr\"}),headerGroup.headers.map((column,key)=>/*#__PURE__*/React.createElement(\"th\",Object.assign({},column.getHeaderProps(column.getSortByToggleProps()),{className:classnames(\"rt-th rt-resizable-header\",{\"-cursor-pointer\":headerGroup.headers.length-1!==key,\"-sort-asc\":column.isSorted&&!column.isSortedDesc,\"-sort-desc\":column.isSorted&&column.isSortedDesc})}),/*#__PURE__*/React.createElement(\"div\",{className:\"rt-resizable-header-content\"},column.render(\"Header\")),/*#__PURE__*/React.createElement(\"div\",null,headerGroup.headers.length-1===key?null:column.canFilter?column.render(\"Filter\"):null)))))),/*#__PURE__*/React.createElement(\"tbody\",Object.assign({},getTableBodyProps(),{className:\"rt-tbody\"}),page.map((row,i)=>{prepareRow(row);return/*#__PURE__*/React.createElement(\"tr\",Object.assign({},row.getRowProps(),{className:classnames(\"rt-tr\",{\" -odd\":i%2===0},{\" -even\":i%2===1})}),row.cells.map(cell=>{return/*#__PURE__*/React.createElement(\"td\",Object.assign({},cell.getCellProps(),{className:\"rt-td\"}),cell.render(\"Cell\"));}));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"pagination-bottom\"})));}// Define a custom filter filter function!\nfunction filterGreaterThan(rows,id,filterValue){return rows.filter(row=>{const rowValue=row.values[id];return rowValue>=filterValue;});}// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove=val=>typeof val!==\"number\";export default Table;","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole_rebe/src/components/ReactTable/ReactTable.js"],"names":["React","useTable","useFilters","useAsyncDebounce","useSortBy","usePagination","classnames","matchSorter","Select","Container","Row","Col","FormGroup","Input","url","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","fuzzyTextFilterFn","rows","id","keys","row","values","autoRemove","val","Table","columns","data","useState","label","numberOfRows","setNumberOfRows","pageSelect","handlePageSelect","filterTypes","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","initialState","pageSize","pageIndex","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","state","visibleColumns","nextPage","pageOptions","pageCount","previousPage","canPreviousPage","canNextPage","setPageSize","gotoPage","pageSelectData","Array","apply","map","numberOfRowsData","prop","key","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","canFilter","i","getRowProps","cells","cell","getCellProps","filterGreaterThan"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n} from \"react-table\";\nimport classnames from \"classnames\";\n// A great library for fuzzy filtering/sorting items\nimport matchSorter from \"match-sorter\";\n// react plugin used to create DropdownMenu for selecting items\nimport Select from \"react-select\";\n\n// reactstrap components\nimport { Container, Row, Col, FormGroup, Input } from \"reactstrap\";\n\nconst url=\"https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/\";\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <FormGroup>\n      <Input\n        placeholder={`Buscar ${count} Registros...`}\n        type=\"text\"\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n      />\n    </FormGroup>\n  );\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\n\n// Our table component\nfunction Table({ columns, data }) {\n  const [numberOfRows, setNumberOfRows] = React.useState({\n    value: 10,\n    label: \"10 filas\",\n  });\n  const [pageSelect, handlePageSelect] = React.useState({\n    value: 0,\n    label: \"Pagina 1\",\n  });\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    visibleColumns,\n    nextPage,\n    pageOptions,\n    pageCount,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    setPageSize,\n    gotoPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { pageSize: 10, pageIndex: 0 },\n    },\n    useFilters, // useFilters!\n    useSortBy,\n    usePagination\n  );\n\n  // We don't want to render all of the rows for this example, so cap\n  // it for this use case\n  // const firstPageRows = rows.slice(0, 10);\n  let pageSelectData = Array.apply(\n    null,\n    Array(pageOptions.length)\n  ).map(function () {});\n  let numberOfRowsData = [5, 10, 20, 25, 50, 100];\n  return (\n    <>\n      <div className=\"ReactTable -striped -highlight primary-pagination\">\n        <div className=\"pagination-top\">\n          <div className=\"-pagination\">\n            <div className=\"-previous\">\n              <button\n                type=\"button\"\n                onClick={() => previousPage()}\n                disabled={!canPreviousPage}\n                className=\"-btn\"\n              >\n                Anterior\n              </button>\n            </div>\n            <div className=\"-center\">\n              <Container>\n                <Row className=\"justify-content-center\">\n                  <Col md=\"4\" sm=\"6\" xs=\"12\">\n                    <Select\n                      className=\"react-select primary\"\n                      classNamePrefix=\"react-select\"\n                      name=\"pageSelect\"\n                      value={pageSelect}\n                      onChange={(value) => {\n                        gotoPage(value.value);\n                        handlePageSelect(value);\n                      }}\n                      options={pageSelectData.map((prop, key) => {\n                        return {\n                          value: key,\n                          label: \"Pagina \" + (key + 1),\n                        };\n                      })}\n                      placeholder=\"Selecciona la Pagina\"\n                    />\n                  </Col>\n                  <Col md=\"4\" sm=\"6\" xs=\"12\">\n                    <Select\n                      className=\"react-select primary\"\n                      classNamePrefix=\"react-select\"\n                      name=\"numberOfRows\"\n                      value={numberOfRows}\n                      onChange={(value) => {\n                        setPageSize(value.value);\n                        setNumberOfRows(value);\n                      }}\n                      options={numberOfRowsData.map((prop) => {\n                        return {\n                          value: prop,\n                          label: prop + \" Filas\",\n                        };\n                      })}\n                      placeholder=\"Selecciona las Filas\"\n                    />\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n            <div className=\"-next\">\n              <button\n                type=\"button\"\n                onClick={() => nextPage()}\n                disabled={!canNextPage}\n                className=\"-btn\"\n              >\n                Siguiente\n              </button>\n            </div>\n          </div>\n        </div>\n        <table {...getTableProps()} className=\"rt-table\">\n          <thead className=\"rt-thead -header\">\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n                {headerGroup.headers.map((column, key) => (\n                  <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    className={classnames(\"rt-th rt-resizable-header\", {\n                      \"-cursor-pointer\": headerGroup.headers.length - 1 !== key,\n                      \"-sort-asc\": column.isSorted && !column.isSortedDesc,\n                      \"-sort-desc\": column.isSorted && column.isSortedDesc,\n                    })}\n                  >\n                    <div className=\"rt-resizable-header-content\">\n                      {column.render(\"Header\")}\n                    </div>\n                    {/* Render the columns filter UI */}\n                    <div>\n                      {headerGroup.headers.length - 1 === key\n                        ? null\n                        : column.canFilter\n                        ? column.render(\"Filter\")\n                        : null}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"rt-tbody\">\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  className={classnames(\n                    \"rt-tr\",\n                    { \" -odd\": i % 2 === 0 },\n                    { \" -even\": i % 2 === 1 }\n                  )}\n                >\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"rt-td\">\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"pagination-bottom\"></div>\n      </div>\n    </>\n  );\n}\n\n// Define a custom filter filter function!\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter((row) => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\n// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}