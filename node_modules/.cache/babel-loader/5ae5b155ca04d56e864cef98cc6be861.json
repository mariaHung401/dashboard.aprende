{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/a.micole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/a.micole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nexport const setColegio = (colegio, grado) => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          dispatch({\n            type: 'set_colegio',\n            payload: [colegio, grado]\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const verColegio = () => /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          dispatch({\n            type: 'ver_colegio'\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport const setArchivoSubir = archivo => dispatch => {\n  dispatch({\n    type: 'set_archivosubir',\n    payload: archivo\n  });\n}; // export const setMensaje = () => async (dispatch) => {\n//   dispatch({\n//     type: 'set_mensaje',\n//   })\n// }\n\nexport const registrarMensaje = colegio => /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n    var mensajes, url, data, respuesta;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          mensajes = [];\n\n          if (!(mensajes !== undefined)) {\n            _context3.next = 12;\n            break;\n          }\n\n          url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/registrarMensaje';\n          data = {\n            codigoweb: colegio.codigoweb,\n            plantel: _this.props.colegio.codigo,\n            grado: _this.state.singleSelect,\n            seccion: _this.state.seccion,\n            titulo: _this.state.mensaje.titulo,\n            fecha: _this.state.fecha,\n            mensaje: _this.state.mensaje\n          };\n          _context3.next = 6;\n          return fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            mode: 'cors',\n            cache: 'default',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            Accept: 'application/json'\n          }).catch(error => {\n            console.log(error);\n          });\n\n        case 6:\n          respuesta = _context3.sent;\n          _context3.next = 9;\n          return respuesta.json();\n\n        case 9:\n          mensajes = _context3.sent;\n          _context3.next = 13;\n          break;\n\n        case 12:\n          mensajes = [];\n\n        case 13:\n          dispatch({\n            type: 'registrar_mensajes',\n            payload: mensajes\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport const verAlumnos = (id, grado) => /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n    var url, respuesta, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (grado != \"\" || grado !== undefined) {\n            grado = grado.substr(3, 6).toUpperCase();\n          }\n\n          url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/veralumnos?id=' + id + '&grado=' + grado;\n          _context4.next = 4;\n          return fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            Accept: 'application/json'\n          }).catch(error => {\n            console.log(error);\n          });\n\n        case 4:\n          respuesta = _context4.sent;\n          _context4.next = 7;\n          return respuesta.json();\n\n        case 7:\n          result = _context4.sent;\n          dispatch({\n            type: 'ver_alumnos',\n            payload: result\n          });\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n\n  return function (_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport const verCredenciales = () => /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n    var url, respuesta, insercion;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/creds';\n          _context5.next = 3;\n          return fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'default',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            Accept: 'application/json'\n          }).catch(error => {\n            console.log(error);\n          });\n\n        case 3:\n          respuesta = _context5.sent;\n          _context5.next = 6;\n          return respuesta.json();\n\n        case 6:\n          insercion = _context5.sent;\n          dispatch({\n            type: 'ver_credenciales',\n            payload: insercion\n          });\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole/src/actions/mainActions.js"],"names":["setColegio","colegio","grado","dispatch","type","payload","verColegio","setArchivoSubir","archivo","registrarMensaje","mensajes","undefined","url","data","codigoweb","plantel","props","codigo","state","singleSelect","seccion","titulo","mensaje","fecha","fetch","method","body","JSON","stringify","mode","cache","headers","Accept","catch","error","console","log","respuesta","json","verAlumnos","id","substr","toUpperCase","result","verCredenciales","insercion"],"mappings":"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","sourcesContent":["export const setColegio = (colegio, grado) => async (dispatch) => {\n  dispatch({\n    type: 'set_colegio',\n    payload:[colegio,grado]\n  })\n}\nexport const verColegio= () => async (dispatch) => {\n  dispatch({\n    type: 'ver_colegio',\n  })\n}\nexport const setArchivoSubir = (archivo) =>  (dispatch) => {\n  dispatch({\n    type: 'set_archivosubir',\n    payload: archivo\n  })\n}\n// export const setMensaje = () => async (dispatch) => {\n//   dispatch({\n//     type: 'set_mensaje',\n//   })\n// }\n\nexport const registrarMensaje = (colegio) => async (dispatch) => {\n  let mensajes=[];\n  if(mensajes!==undefined){\n    let url='https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/registrarMensaje';\n    let data = {\n      codigoweb:colegio.codigoweb,\n      plantel:this.props.colegio.codigo,\n      grado: this.state.singleSelect,\n      seccion:this.state.seccion,\n      titulo:this.state.mensaje.titulo,\n      fecha:this.state.fecha,\n      mensaje:this.state.mensaje,\n    };\n    let respuesta = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'default',\n        headers:{\n            'Content-Type': 'application/json'\n        },\n        Accept: 'application/json',\n    }).catch(error => {\n        console.log(error);\n    });\n    mensajes = await respuesta.json();\n  }else{\n    mensajes=[]\n  }\n  dispatch({\n    type: 'registrar_mensajes',\n    payload: mensajes\n  });\n}\n\nexport const verAlumnos = (id,grado) => async (dispatch) => {\n  if(grado!=\"\" || grado!==undefined){\n    grado=grado.substr(3,6).toUpperCase();\n  }\n  let url='https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/veralumnos?id='+id+'&grado='+grado;\n  let respuesta = await fetch(url, {\n      method: 'GET',\n      headers:{\n          'Content-Type': 'application/json'\n      },\n      Accept: 'application/json',\n  })\n  .catch(error => {\n      console.log(error);\n  });\n  let result = await respuesta.json();\n  dispatch({\n    type: 'ver_alumnos',\n    payload: result\n  });\n}\n\nexport const verCredenciales =  () => async (dispatch) => {\n    const url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/creds';\n    let respuesta = await fetch(url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'default',\n        headers:{\n            'Content-Type': 'application/json'\n        },\n        Accept: 'application/json',\n    }).catch(error => {\n        console.log(error);\n    });\n    let insercion = await respuesta.json();\n    dispatch({\n        type: 'ver_credenciales',\n        payload: insercion\n    });\n  }\n"]},"metadata":{},"sourceType":"module"}