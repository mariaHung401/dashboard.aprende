{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/a.micole_rebe/src/layouts/Admin.js\";\nimport React from \"react\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.collapse) {\n          return this.getRoutes(prop.views);\n        }\n\n        if (prop.layout === \"/admin\") {\n          return /*#__PURE__*/React.createElement(Route, {\n            path: prop.layout + prop.path,\n            component: prop.component,\n            key: key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.handleActiveClick = color => {\n      this.setState({\n        activeColor: color\n      });\n    };\n\n    this.handleBgClick = color => {\n      this.setState({\n        backgroundColor: color\n      });\n    };\n\n    this.handleMiniClick = () => {\n      if (document.body.classList.contains(\"sidebar-mini\")) {\n        this.setState({\n          sidebarMini: false\n        });\n      } else {\n        this.setState({\n          sidebarMini: true\n        });\n      }\n\n      document.body.classList.toggle(\"sidebar-mini\");\n    };\n\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n      sidebarMini: false\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n    }\n  }\n\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      routes: routes,\n      bgColor: this.state.backgroundColor,\n      activeColor: this.state.activeColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AdminNavbar, Object.assign({}, this.props, {\n      handleMiniClick: this.handleMiniClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, this.getRoutes(routes)), // we don't want the Footer to be rendered on full screen maps page\n    this.props.location.pathname.indexOf(\"full-screen-map\") !== -1 ? null : /*#__PURE__*/React.createElement(Footer, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole_rebe/src/layouts/Admin.js"],"names":["React","PerfectScrollbar","Route","Switch","AdminNavbar","Footer","Sidebar","routes","ps","Admin","Component","constructor","props","getRoutes","map","prop","key","collapse","views","layout","path","component","handleActiveClick","color","setState","activeColor","handleBgClick","backgroundColor","handleMiniClick","document","body","classList","contains","sidebarMini","toggle","state","componentDidMount","navigator","platform","indexOf","documentElement","className","remove","refs","mainPanel","componentWillUnmount","destroy","componentDidUpdate","e","history","action","scrollTop","scrollingElement","render","location","pathname"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n      sidebarMini: false,\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  handleMiniClick = () => {\n    if (document.body.classList.contains(\"sidebar-mini\")) {\n      this.setState({ sidebarMini: false });\n    } else {\n      this.setState({ sidebarMini: true });\n    }\n    document.body.classList.toggle(\"sidebar-mini\");\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar {...this.props} handleMiniClick={this.handleMiniClick} />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {\n            // we don't want the Footer to be rendered on full screen maps page\n            this.props.location.pathname.indexOf(\"full-screen-map\") !==\n            -1 ? null : (\n              <Footer fluid />\n            )\n          }\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}