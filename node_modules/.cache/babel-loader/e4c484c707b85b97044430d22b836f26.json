{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/a.micole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/a.micole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/macbook/Desktop/a.micole/src/views/Charts.js\";\nimport React from \"react\"; // react plugin used to create charts\n\nimport { Line, Bar, Pie } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardFooter, CardTitle, Row, Col, Table } from \"reactstrap\"; // core components\n\nimport { chartExample1, chartExample4, chartExample9, chartExample10, chartExample11, chartExample12 } from \"variables/charts.js\";\nimport * as mainActions from \"../actions/mainActions\";\nimport { connect } from 'react-redux';\nconst ejes = {\n  yAxes: [{\n    ticks: {\n      fontColor: \"#9f9f9f\",\n      beginAtZero: false,\n      maxTicksLimit: 5 //padding: 20\n\n    },\n    gridLines: {\n      drawBorder: false,\n      zeroLineColor: \"transparent\",\n      color: \"rgba(255,255,255,0.05)\"\n    }\n  }],\n  xAxes: [{\n    gridLines: {\n      drawBorder: false,\n      color: \"rgba(255,255,255,0.1)\",\n      zeroLineColor: \"transparent\",\n      display: false\n    },\n    ticks: {\n      padding: 20,\n      fontColor: \"#9f9f9f\"\n    }\n  }]\n};\nconst datos1 = {\n  labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  datasets: [{\n    label: \"Dia\",\n    borderColor: \"#6bd098\",\n    pointRadius: 0,\n    pointHoverRadius: 0,\n    fill: false,\n    borderWidth: 3,\n    barPercentage: 1.6,\n    data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610]\n  }]\n};\nconst data1 = {\n  data: datos1,\n  options: {\n    legend: {\n      display: false\n    },\n    tooltips: {\n      enabled: false\n    },\n    scales: ejes\n  }\n};\nconst options2 = {\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        fontColor: \"#9f9f9f\",\n        beginAtZero: false,\n        maxTicksLimit: 5\n      },\n      gridLines: {\n        drawBorder: false,\n        zeroLineColor: \"transparent\",\n        color: \"rgba(255,255,255,0.05)\"\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(255,255,255,0.1)\",\n        zeroLineColor: \"transparent\",\n        display: false\n      },\n      ticks: {\n        padding: 5,\n        fontColor: \"#9f9f9f\"\n      }\n    }]\n  }\n};\nconst optionspie = {\n  legend: {\n    display: true\n  },\n  tooltips: {\n    enabled: true\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        display: false\n      },\n      gridLines: {\n        drawBorder: false,\n        zeroLineColor: \"transparent\",\n        color: \"rgba(255,255,255,0.05)\"\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(255,255,255,0.1)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        display: false\n      }\n    }]\n  }\n};\nconst datapie = {\n  data: {\n    labels: [\"Asignaciones\", \"Respuestas\"],\n    datasets: [{\n      label: \"Asignaciones\",\n      pointRadius: 0,\n      pointHoverRadius: 0,\n      backgroundColor: [\"#e3e3e3\", \"#fcc468\"],\n      borderWidth: 0,\n      barPercentage: 1.6,\n      data: [542, 480]\n    }]\n  },\n  options: {\n    legend: {\n      display: false\n    },\n    tooltips: {\n      enabled: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          display: false\n        },\n        gridLines: {\n          drawBorder: false,\n          zeroLineColor: \"transparent\",\n          color: \"rgba(255,255,255,0.05)\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(255,255,255,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          display: false\n        }\n      }]\n    }\n  }\n};\nconst data3options = {\n  tooltips: {\n    tooltipFillColor: \"rgba(0,0,0,0.5)\",\n    tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    tooltipFontSize: 14,\n    tooltipFontStyle: \"normal\",\n    tooltipFontColor: \"#fff\",\n    tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    tooltipTitleFontSize: 14,\n    tooltipTitleFontStyle: \"bold\",\n    tooltipTitleFontColor: \"#fff\",\n    tooltipYPadding: 6,\n    tooltipXPadding: 6,\n    tooltipCaretSize: 8,\n    tooltipCornerRadius: 6,\n    tooltipXOffset: 10\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        fontColor: \"#9f9f9f\",\n        fontStyle: \"bold\",\n        beginAtZero: true,\n        maxTicksLimit: 5,\n        padding: 20\n      },\n      gridLines: {\n        zeroLineColor: \"transparent\",\n        display: true,\n        drawBorder: false,\n        color: \"#9f9f9f\"\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        zeroLineColor: \"white\",\n        display: false,\n        drawBorder: false,\n        color: \"transparent\"\n      },\n      ticks: {\n        padding: 20,\n        fontColor: \"#9f9f9f\",\n        fontStyle: \"bold\"\n      }\n    }]\n  }\n};\nconst data3 = {\n  data: {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    datasets: [{\n      label: \"Data\",\n      borderColor: \"#fcc468\",\n      fill: true,\n      backgroundColor: \"#fcc468\",\n      hoverBorderColor: \"#fcc468\",\n      borderWidth: 5,\n      barPercentage: 0.4,\n      data: [100, 120, 80, 100, 90, 130, 110, 100, 80, 110]\n    }]\n  },\n  options: {\n    tooltips: {\n      tooltipFillColor: \"rgba(0,0,0,0.5)\",\n      tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      tooltipFontSize: 14,\n      tooltipFontStyle: \"normal\",\n      tooltipFontColor: \"#fff\",\n      tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      tooltipTitleFontSize: 14,\n      tooltipTitleFontStyle: \"bold\",\n      tooltipTitleFontColor: \"#fff\",\n      tooltipYPadding: 6,\n      tooltipXPadding: 6,\n      tooltipCaretSize: 8,\n      tooltipCornerRadius: 6,\n      tooltipXOffset: 10\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor: \"#9f9f9f\",\n          fontStyle: \"bold\",\n          beginAtZero: true,\n          maxTicksLimit: 5,\n          padding: 20\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          display: true,\n          drawBorder: false,\n          color: \"#9f9f9f\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          zeroLineColor: \"white\",\n          display: false,\n          drawBorder: false,\n          color: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9f9f9f\",\n          fontStyle: \"bold\"\n        }\n      }]\n    }\n  }\n};\n\nclass Charts extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.verEstadisticas = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n        var url, respuesta, estadisticas, dias, valores, datos1, dias2, valores2, datos2, data1, data2, asignaciones, respuestas, datapie, subidas, data3, descargaDias, descargaValores, descargaDatos;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/estadisticasRecursos?id=' + id;\n              _context.next = 3;\n              return fetch(url, {\n                method: 'GET',\n                mode: 'cors',\n                cache: 'default',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                Accept: 'application/json'\n              }).catch(error => {\n                console.log(error);\n              });\n\n            case 3:\n              respuesta = _context.sent;\n              _context.next = 6;\n              return respuesta.json();\n\n            case 6:\n              estadisticas = _context.sent;\n              dias = estadisticas[0].map(dia => dia.dia);\n              valores = estadisticas[0].map(dia => parseInt(dia.total));\n              datos1 = {\n                labels: dias,\n                datasets: [{\n                  label: \"Dia\",\n                  borderColor: \"#6bd098\",\n                  pointRadius: 0,\n                  pointHoverRadius: 0,\n                  fill: false,\n                  borderWidth: 3,\n                  barPercentage: 1.6,\n                  data: valores\n                }]\n              };\n\n              if (estadisticas[1].lenght > 0) {\n                dias2 = estadisticas[1].map(dia => dia.dia);\n                valores2 = estadisticas[1].map(dia => parseInt(dia.total));\n                datos2 = {\n                  labels: dias2,\n                  datasets: [{\n                    label: \"Dia\",\n                    borderColor: \"#6bd098\",\n                    pointRadius: 0,\n                    pointHoverRadius: 0,\n                    fill: false,\n                    borderWidth: 3,\n                    barPercentage: 1.6,\n                    data: valores2\n                  }]\n                };\n                data1 = {\n                  data: datos1,\n                  options: {\n                    legend: {\n                      display: false\n                    },\n                    tooltips: {\n                      enabled: false\n                    },\n                    scales: ejes\n                  }\n                };\n                data2 = {\n                  data: datos2,\n                  options: options2\n                };\n                asignaciones = valores.reduce((a, b) => a + b);\n                respuestas = valores2.reduce((a, b) => a + b);\n                datapie = {\n                  data: {\n                    labels: [\"Asignaciones\", \"Respuestas\"],\n                    datasets: [{\n                      label: \"Asignaciones\",\n                      pointRadius: 0,\n                      pointHoverRadius: 0,\n                      backgroundColor: [\"#e3e3e3\", \"#fcc468\"],\n                      borderWidth: 0,\n                      barPercentage: 1.6,\n                      data: [asignaciones, respuestas]\n                    }]\n                  },\n                  options: optionspie\n                };\n                subidas = estadisticas[2].map(dia => parseInt(dia.total));\n                data3 = {\n                  data: {\n                    labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n                    datasets: [{\n                      label: \"Datos\",\n                      borderColor: \"#fcc468\",\n                      fill: true,\n                      backgroundColor: \"#fcc468\",\n                      hoverBorderColor: \"#fcc468\",\n                      borderWidth: 5,\n                      barPercentage: 0.4,\n                      data: subidas\n                    }]\n                  },\n                  options: data3options\n                };\n\n                _this.setState({\n                  data1: data1,\n                  data2: data2,\n                  datapie: datapie,\n                  data3: data3\n                });\n              } else {\n                _this.setState({\n                  data1: data1\n                });\n              }\n\n              if (estadisticas[3].length > 0) {\n                descargaDias = estadisticas[3].map(descarga => descarga.fecha);\n                descargaValores = estadisticas[3].map(descarga => parseInt(descarga.kb));\n                descargaDatos = {\n                  labels: descargaDias,\n                  datasets: [{\n                    label: \"Dia\",\n                    borderColor: \"#6bd098\",\n                    pointRadius: 0,\n                    pointHoverRadius: 0,\n                    fill: false,\n                    borderWidth: 3,\n                    barPercentage: 1.6,\n                    data: descargaValores\n                  }]\n                };\n\n                _this.setState({\n                  data4: descargaDatos\n                });\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _this.props.verCredenciales();\n\n            if (!_this.props.colegio.id) {\n              _this.props.history.push(\"/auth/login\");\n            }\n\n            _context2.next = 4;\n            return _this.verEstadisticas(_this.props.colegio.id);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    this.state = {\n      estadisticas: [],\n      data1: data1,\n      data2: data1,\n      data3: data3,\n      data4: {\n        labels: []\n      },\n      datapie: datapie\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }\n    }, \"Estadisticas de uso \", \" \"), this.state.data4.labels.length > 0 ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      lg: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 21\n      }\n    }, \"Descargas por Dia\")), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state.data4,\n      options: chartExample9.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 19\n      }\n    }))))) : null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 19\n      }\n    }, \"Cargas de tareas del Mes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 19\n      }\n    }, \"por Dia\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state.data1.data,\n      options: chartExample9.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 19\n      }\n    }, \"Tipos de Archivos\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 19\n      }\n    }, \"Docs - Videos - Audios\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: chartExample9.data,\n      options: chartExample9.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 19\n      }\n    }, \"Ultimos envios de Tareas \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 19\n      }\n    }, \"Respuestas de Estudiantes\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.data2.data,\n      options: this.state.data2.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"car-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 19\n      }\n    }, \"Carga de Respuestas\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 19\n      }\n    }, \"Mbytes Enviados a la Plataforma\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.data3.data,\n      options: this.state.data3.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 19\n      }\n    }, \"Asignaciones vs Respuestas\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 19\n      }\n    }, \"Tareas Asignadas / Respuestas de los alumnos\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: this.state.datapie.data,\n      options: this.state.datapie.options,\n      width: 456,\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 21\n      }\n    }), \"Ratio Asignaciones / Respuestas\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 19\n      }\n    }, \"Users Behavior\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 19\n      }\n    }, \"24 Hours performance\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: chartExample12.data,\n      options: chartExample12.options,\n      width: 400,\n      height: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 21\n      }\n    }), \"Updated 3 minutes ago\")))))));\n  }\n\n}\n\nconst mapStateToProps = reducers => {\n  return reducers.mainReducer;\n};\n\nexport default connect(mapStateToProps, mainActions)(Charts);","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole/src/views/Charts.js"],"names":["React","Line","Bar","Pie","Card","CardHeader","CardBody","CardFooter","CardTitle","Row","Col","Table","chartExample1","chartExample4","chartExample9","chartExample10","chartExample11","chartExample12","mainActions","connect","ejes","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","display","padding","datos1","labels","datasets","label","borderColor","pointRadius","pointHoverRadius","fill","borderWidth","barPercentage","data","data1","options","legend","tooltips","enabled","scales","options2","optionspie","datapie","backgroundColor","data3options","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","fontStyle","data3","hoverBorderColor","Charts","Component","constructor","props","verEstadisticas","id","url","fetch","method","mode","cache","headers","Accept","catch","error","console","log","respuesta","json","estadisticas","dias","map","dia","valores","parseInt","total","lenght","dias2","valores2","datos2","data2","asignaciones","reduce","a","b","respuestas","subidas","setState","length","descargaDias","descarga","fecha","descargaValores","kb","descargaDatos","data4","componentDidMount","verCredenciales","colegio","history","push","state","render","mapStateToProps","reducers","mainReducer"],"mappings":"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","sourcesContent":["\nimport React  from \"react\";\n// react plugin used to create charts\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample4,\n  chartExample9,\n  chartExample10,\n  chartExample11,\n  chartExample12,\n} from \"variables/charts.js\";\n\nimport * as mainActions from \"../actions/mainActions\";\nimport { connect } from 'react-redux';\n\nconst ejes = {\n  yAxes: [\n    {\n      ticks: {\n        fontColor: \"#9f9f9f\",\n        beginAtZero: false,\n        maxTicksLimit: 5,\n        //padding: 20\n      },\n      gridLines: {\n        drawBorder: false,\n        zeroLineColor: \"transparent\",\n        color: \"rgba(255,255,255,0.05)\",\n      },\n    },\n  ],\n\n  xAxes: [\n    {\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(255,255,255,0.1)\",\n        zeroLineColor: \"transparent\",\n        display: false,\n      },\n      ticks: {\n        padding: 20,\n        fontColor: \"#9f9f9f\",\n      },\n    },\n  ],\n};\nconst datos1 =  {\n  labels: [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \n  ],\n  datasets: [\n    {\n      label: \"Dia\",\n      borderColor: \"#6bd098\",\n      pointRadius: 0,\n      pointHoverRadius: 0,\n      fill: false,\n      borderWidth: 3,\n      barPercentage: 1.6,\n      data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610],\n    },\n  ],\n};\n\nconst data1 = {\n  data:datos1,\n  options: {\n    legend: {\n      display: false,\n    },\n\n    tooltips: {\n      enabled: false,\n    },\n\n    scales: ejes,\n  },\n}\n\nconst options2 = {\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    enabled: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          fontColor: \"#9f9f9f\",\n          beginAtZero: false,\n          maxTicksLimit: 5,\n        },\n        gridLines: {\n          drawBorder: false,\n          zeroLineColor: \"transparent\",\n          color: \"rgba(255,255,255,0.05)\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(255,255,255,0.1)\",\n          zeroLineColor: \"transparent\",\n          display: false,\n        },\n        ticks: {\n          padding: 5,\n          fontColor: \"#9f9f9f\",\n        },\n      },\n    ],\n  },\n};\n\n\nconst optionspie = {\n  legend: {\n    display: true,\n  },\n  tooltips: {\n    enabled: true,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          display: false,\n        },\n        gridLines: {\n          drawBorder: false,\n          zeroLineColor: \"transparent\",\n          color: \"rgba(255,255,255,0.05)\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(255,255,255,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          display: false,\n        },\n      },\n    ],\n  },\n}\nconst datapie = {\n  data: {\n    labels: [\"Asignaciones\", \"Respuestas\"],\n    datasets: [\n      {\n        label: \"Asignaciones\", \n        pointRadius: 0,\n        pointHoverRadius: 0,\n        backgroundColor: [\"#e3e3e3\", \"#fcc468\"],\n        borderWidth: 0,\n        barPercentage: 1.6,\n        data: [542, 480],\n      },\n    ],\n  },\n  options: {\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      enabled: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false,\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            display: false,\n          },\n        },\n      ],\n    },\n  },\n};\n\nconst data3options = {\n  tooltips: {\n    tooltipFillColor: \"rgba(0,0,0,0.5)\",\n    tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    tooltipFontSize: 14,\n    tooltipFontStyle: \"normal\",\n    tooltipFontColor: \"#fff\",\n    tooltipTitleFontFamily:\n      \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    tooltipTitleFontSize: 14,\n    tooltipTitleFontStyle: \"bold\",\n    tooltipTitleFontColor: \"#fff\",\n    tooltipYPadding: 6,\n    tooltipXPadding: 6,\n    tooltipCaretSize: 8,\n    tooltipCornerRadius: 6,\n    tooltipXOffset: 10,\n  },\n  legend: {\n    display: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          fontColor: \"#9f9f9f\",\n          fontStyle: \"bold\",\n          beginAtZero: true,\n          maxTicksLimit: 5,\n          padding: 20,\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          display: true,\n          drawBorder: false,\n          color: \"#9f9f9f\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          zeroLineColor: \"white\",\n          display: false,\n          drawBorder: false,\n          color: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9f9f9f\",\n          fontStyle: \"bold\",\n        },\n      },\n    ],\n  },\n};\n\n\nconst data3 = {\n  data: {\n    labels: [\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n      \n    ],\n    datasets: [\n      {\n        label: \"Data\",\n        borderColor: \"#fcc468\",\n        fill: true,\n        backgroundColor: \"#fcc468\",\n        hoverBorderColor: \"#fcc468\",\n        borderWidth: 5,\n        barPercentage: 0.4,\n        data: [\n          100,\n          120,\n          80,\n          100,\n          90,\n          130,\n          110,\n          100,\n          80,\n          110,\n          \n        ],\n      },\n    ],\n  },\n  options: {\n    tooltips: {\n      tooltipFillColor: \"rgba(0,0,0,0.5)\",\n      tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      tooltipFontSize: 14,\n      tooltipFontStyle: \"normal\",\n      tooltipFontColor: \"#fff\",\n      tooltipTitleFontFamily:\n        \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      tooltipTitleFontSize: 14,\n      tooltipTitleFontStyle: \"bold\",\n      tooltipTitleFontColor: \"#fff\",\n      tooltipYPadding: 6,\n      tooltipXPadding: 6,\n      tooltipCaretSize: 8,\n      tooltipCornerRadius: 6,\n      tooltipXOffset: 10,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            fontStyle: \"bold\",\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            padding: 20,\n          },\n          gridLines: {\n            zeroLineColor: \"transparent\",\n            display: true,\n            drawBorder: false,\n            color: \"#9f9f9f\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            zeroLineColor: \"white\",\n            display: false,\n            drawBorder: false,\n            color: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\",\n            fontStyle: \"bold\",\n          },\n        },\n      ],\n    },\n  },\n};\n\n\n\nclass Charts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      estadisticas: [],\n      data1:data1,\n      data2:data1,\n      data3:data3,\n      data4:{labels:[]},\n      datapie:datapie,\n    };\n    \n  }\n\n  verEstadisticas = async (id) => {\n    let url='https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/estadisticasRecursos?id='+id;\n    let respuesta = await fetch(url, {\n        method: 'GET', \n        mode: 'cors',\n        cache: 'default',\n        headers:{\n            'Content-Type': 'application/json'\n        },\n        Accept: 'application/json',\n    }).catch(error => {\n        console.log(error);\n    });\n    let estadisticas = await respuesta.json();\n    const dias = estadisticas[0].map(dia=>dia.dia);\n    const valores = estadisticas[0].map(dia=>parseInt(dia.total));\n    const datos1 =  {\n      labels: dias,\n      datasets: [\n        {\n          label: \"Dia\",\n          borderColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          fill: false,\n          borderWidth: 3,\n          barPercentage: 1.6,\n          data: valores,\n        },\n      ],\n    };\n    if(estadisticas[1].lenght>0){\n      const dias2 = estadisticas[1].map(dia=>dia.dia);\n      const valores2 = estadisticas[1].map(dia=>parseInt(dia.total));\n      const datos2 =  {\n        labels: dias2,\n        datasets: [\n          {\n            label: \"Dia\",\n            borderColor: \"#6bd098\",\n            pointRadius: 0,\n            pointHoverRadius: 0,\n            fill: false,\n            borderWidth: 3,\n            barPercentage: 1.6,\n            data: valores2,\n          },\n        ],\n      };\n    \n\n      const data1 = {\n        data:datos1,\n        options: {\n          legend: {\n            display: false,\n          },\n      \n          tooltips: {\n            enabled: false,\n          },\n      \n          scales: ejes,\n        },\n      }\n      const data2 = {\n        data:datos2,\n        options: options2,\n      }\n      const asignaciones = valores.reduce((a,b)=>a+b);\n      const respuestas = valores2.reduce((a,b)=>a+b);\n\n      \n      const datapie = {\n        data: {\n          labels: [\"Asignaciones\", \"Respuestas\"],\n          datasets: [\n            {\n              label: \"Asignaciones\", \n              pointRadius: 0,\n              pointHoverRadius: 0,\n              backgroundColor: [\"#e3e3e3\", \"#fcc468\"],\n              borderWidth: 0,\n              barPercentage: 1.6,\n              data: [asignaciones, respuestas],\n            },\n          ],\n        },\n        options: optionspie,\n      };\n\n      const subidas = estadisticas[2].map(dia=>parseInt(dia.total));\n\n      \n      const data3 = {\n        data: {\n          labels: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            \n          ],\n          datasets: [\n            {\n              label: \"Datos\",\n              borderColor: \"#fcc468\",\n              fill: true,\n              backgroundColor: \"#fcc468\",\n              hoverBorderColor: \"#fcc468\",\n              borderWidth: 5,\n              barPercentage: 0.4,\n              data: subidas,\n            },\n          ],\n        },\n        options: data3options,\n      };\n      this.setState({ data1:data1, data2:data2, datapie:datapie, data3:data3});\n    }else{\n      this.setState({ data1:data1});\n    }\n    if(estadisticas[3].length>0){\n      const descargaDias = estadisticas[3].map(descarga=>descarga.fecha);\n      const descargaValores = estadisticas[3].map(descarga=>parseInt(descarga.kb));\n      const descargaDatos =  {\n        labels: descargaDias,\n        datasets: [\n          {\n            label: \"Dia\",\n            borderColor: \"#6bd098\",\n            pointRadius: 0,\n            pointHoverRadius: 0,\n            fill: false,\n            borderWidth: 3,\n            barPercentage: 1.6,\n            data: descargaValores,\n          },\n        ],\n      };\n      this.setState({ data4:descargaDatos});\n    }\n\n  }\n  \n  componentDidMount = async () => {\n    this.props.verCredenciales();\n    if(!this.props.colegio.id){\n      this.props.history.push(\"/auth/login\");\n    }\n    await this.verEstadisticas(this.props.colegio.id);\n  }\n  \n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <p>\n            Estadisticas de uso {\" \"}\n            \n          </p>\n          {this.state.data4.labels.length>0 ? (\n          <Row>\n            <Col md=\"12\" lg=\"12\">\n              <Card>\n                <CardHeader>\n                  \n                    <p className=\"card-category\">\n                      Descargas por Dia\n                    </p>\n                </CardHeader>\n                <CardBody className=\"table-responsive\">\n                  <Line\n                    data={this.state.data4}\n                    options={chartExample9.options}\n                  />\n                  \n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          ) : (null)}\n          <Row>\n            <Col md=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle>Cargas de tareas del Mes</CardTitle>\n                  <p className=\"card-category\">por Dia</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={this.state.data1.data}\n                    options={chartExample9.options}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle>Tipos de Archivos</CardTitle>\n                  <p className=\"card-category\">Docs - Videos - Audios</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={chartExample9.data}\n                    options={chartExample9.options}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle>Ultimos envios de Tareas </CardTitle>\n                  <p className=\"card-category\">Respuestas de Estudiantes</p>\n                </CardHeader>\n                <CardBody>\n                  <Bar\n                    data={this.state.data2.data}\n                    options={this.state.data2.options}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"6\">\n              <Card className=\"car-chart\">\n                <CardHeader>\n                  <CardTitle>Carga de Respuestas</CardTitle>\n                  <p className=\"card-category\">Mbytes Enviados a la Plataforma</p>\n                </CardHeader>\n                <CardBody>\n                  <Bar\n                    data={this.state.data3.data}\n                    options={this.state.data3.options}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Asignaciones vs Respuestas</CardTitle>\n                  <p className=\"card-category\">Tareas Asignadas / Respuestas de los alumnos</p>\n                </CardHeader>\n                <CardBody>\n                  <Pie\n                    data={this.state.datapie.data}\n                    options={this.state.datapie.options}\n                    width={456}\n                    height={300}\n                  />\n                </CardBody>\n                <CardFooter>\n                  \n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-calendar\" />\n                    Ratio Asignaciones / Respuestas\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Users Behavior</CardTitle>\n                  <p className=\"card-category\">24 Hours performance</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={chartExample12.data}\n                    options={chartExample12.options}\n                    width={400}\n                    height={100}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-history\" />\n                    Updated 3 minutes ago\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (reducers) => {\n  return reducers.mainReducer;\n}\n\nexport default connect(mapStateToProps, mainActions )(Charts);\n"]},"metadata":{},"sourceType":"module"}