{"ast":null,"code":"// import React, { useRef, useState } from 'react';\n// import './Chat.css';\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n// import 'firebase/analytics';\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\n// import {Link} from 'react-router-dom';\n// firebase.initializeApp({\n//     apiKey: \"AIzaSyBoOsm-fVCE3CaINek5LurcRwIBOqu2-fs\",\n//     authDomain: \"chatapp-d098c.firebaseapp.com\",\n//     projectId: \"chatapp-d098c\",\n//     storageBucket: \"chatapp-d098c.appspot.com\",\n//     messagingSenderId: \"11098059960\",\n//     appId: \"1:11098059960:web:1969239b37a32639cb304d\",\n//     measurementId: \"G-V92L3S4D0N\"\n// })\n// const auth = firebase.auth();\n// const firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n// function App() {\n// const [user] = useAuthState(auth);\n//     return (\n//         <div className=\"App\">\n//             <header>\n//                 <div className=\"logo\">\n//                     <h4>Mensajes</h4>\n//                 </div>\n//                 <div className=\"header-right\">\n//                     <button type=\"button\" class=\"btn btn-light\">\n//                         <Link to=\"admin/dashboard\">Volver</Link>\n//                     </button>\n//                     <SignOut />\n//                 </div>\n//             </header>\n//             <section>\n//                 {user ? <ChatRoom /> : <SignIn />}\n//             </section>\n//         </div>\n//     );\n// }\n// function SignIn() {\n//     const signInWithGoogle = () => {\n//         const provider = new firebase.auth.GoogleAuthProvider();\n//         auth.signInWithPopup(provider);\n//     }\n//     return (\n//         <>\n//         <div>\n//             <button type=\"button\" class=\"btn btn-light\" onClick={signInWithGoogle}>Entra con Google</button>\n//         </div>\n//         </>\n//     )\n// }\n// function SignOut() {\n//     return auth.currentUser && (\n//         <button type=\"button\" class=\"btn btn-light\" onClick={() => auth.signOut()}>Cerrar sesiÃ³n</button>\n//     )\n// }\n// function ChatRoom() {\n//     const dummy = useRef();\n//     const messagesRef = firestore.collection('messages');\n//     const query = messagesRef.orderBy('createdAt').limit(100);\n//     const [messages] = useCollectionData(query, { idField: 'id' });\n//     const [formValue, setFormValue] = useState('');\n//     const sendMessage = async (e) => {\n//         e.preventDefault();\n//         const { uid, photoURL } = auth.currentUser;\n//         await messagesRef.add({\n//         text: formValue,\n//         createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n//         uid,\n//         photoURL\n//         })\n//         setFormValue('');\n//         dummy.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//     return (<>\n//         <main>\n//             {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n//             <span ref={dummy}></span>\n//         </main>\n//         <form className=\"form__send\" onSubmit={sendMessage}>\n//             <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Escribe aqui\" />\n//             <button type=\"submit\" disabled={!formValue}>ðŸ•Šenviar</button>\n//         </form>\n//     </>)\n// }\n// function ChatMessage(props) {\n//     const { text, uid, photoURL } = props.message;\n//     const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n//     return (\n//     <>\n//         <div className={`message ${messageClass}`}>\n//             <img className=\"img__mail\" src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n//             <p>{text}</p>\n//         </div>\n//     </>\n//     )\n// }\n// export default App;","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole/src/views/pages/Chat.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["// import React, { useRef, useState } from 'react';\n// import './Chat.css';\n\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n// import 'firebase/analytics';\n\n\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\n// import {Link} from 'react-router-dom';\n\n// firebase.initializeApp({\n//     apiKey: \"AIzaSyBoOsm-fVCE3CaINek5LurcRwIBOqu2-fs\",\n//     authDomain: \"chatapp-d098c.firebaseapp.com\",\n//     projectId: \"chatapp-d098c\",\n//     storageBucket: \"chatapp-d098c.appspot.com\",\n//     messagingSenderId: \"11098059960\",\n//     appId: \"1:11098059960:web:1969239b37a32639cb304d\",\n//     measurementId: \"G-V92L3S4D0N\"\n// })\n\n// const auth = firebase.auth();\n// const firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n\n\n// function App() {\n\n// const [user] = useAuthState(auth);\n\n//     return (\n//         <div className=\"App\">\n//             <header>\n//                 <div className=\"logo\">\n//                     <h4>Mensajes</h4>\n//                 </div>\n//                 <div className=\"header-right\">\n//                     <button type=\"button\" class=\"btn btn-light\">\n//                         <Link to=\"admin/dashboard\">Volver</Link>\n//                     </button>\n//                     <SignOut />\n//                 </div>\n//             </header>\n\n//             <section>\n//                 {user ? <ChatRoom /> : <SignIn />}\n//             </section>\n\n//         </div>\n//     );\n// }\n\n// function SignIn() {\n//     const signInWithGoogle = () => {\n//         const provider = new firebase.auth.GoogleAuthProvider();\n//         auth.signInWithPopup(provider);\n//     }\n\n//     return (\n//         <>\n//         <div>\n//             <button type=\"button\" class=\"btn btn-light\" onClick={signInWithGoogle}>Entra con Google</button>\n\n//         </div>\n//         </>\n//     )\n\n// }\n\n// function SignOut() {\n//     return auth.currentUser && (\n//         <button type=\"button\" class=\"btn btn-light\" onClick={() => auth.signOut()}>Cerrar sesiÃ³n</button>\n//     )\n// }\n\n\n// function ChatRoom() {\n//     const dummy = useRef();\n//     const messagesRef = firestore.collection('messages');\n//     const query = messagesRef.orderBy('createdAt').limit(100);\n\n//     const [messages] = useCollectionData(query, { idField: 'id' });\n\n//     const [formValue, setFormValue] = useState('');\n\n\n//     const sendMessage = async (e) => {\n//         e.preventDefault();\n\n//         const { uid, photoURL } = auth.currentUser;\n\n//         await messagesRef.add({\n//         text: formValue,\n//         createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n//         uid,\n//         photoURL\n//         })\n\n//         setFormValue('');\n//         dummy.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n\n//     return (<>\n//         <main>\n//             {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n//             <span ref={dummy}></span>\n//         </main>\n\n//         <form className=\"form__send\" onSubmit={sendMessage}>\n//             <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Escribe aqui\" />\n//             <button type=\"submit\" disabled={!formValue}>ðŸ•Šenviar</button>\n//         </form>\n//     </>)\n// }\n\n// function ChatMessage(props) {\n//     const { text, uid, photoURL } = props.message;\n\n//     const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n//     return (\n//     <>\n//         <div className={`message ${messageClass}`}>\n//             <img className=\"img__mail\" src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n//             <p>{text}</p>\n//         </div>\n//     </>\n//     )\n// }\n\n\n// export default App;"]},"metadata":{},"sourceType":"module"}