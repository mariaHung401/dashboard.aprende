{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/a.micole/src/views/forms/ValidationForms.js\";\n\n/*!\n\n=========================================================\n* Paper Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, CardFooter, CardTitle, Label, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\n\nclass ValidationForms extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyEmail = value => {\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (emailRex.test(value)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.verifyLength = (value, length) => {\n      if (value.length >= length) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.compare = (string1, string2) => {\n      if (string1 === string2) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.verifyNumber = value => {\n      var numberRex = new RegExp(\"^[0-9]+$\");\n\n      if (numberRex.test(value)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.verifyUrl = value => {\n      try {\n        new URL(value);\n        return true;\n      } catch (_) {\n        return false;\n      }\n    };\n\n    this.change = (event, stateName, type, stateNameEqualTo, maxValue) => {\n      switch (type) {\n        case \"email\":\n          if (this.verifyEmail(event.target.value)) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"password\":\n          if (this.verifyLength(event.target.value, 1)) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"equalTo\":\n          if (this.compare(event.target.value, this.state[stateNameEqualTo])) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n            this.setState({\n              [stateNameEqualTo + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n            this.setState({\n              [stateNameEqualTo + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"number\":\n          if (this.verifyNumber(event.target.value)) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"length\":\n          if (this.verifyLength(event.target.value, stateNameEqualTo)) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"max-length\":\n          if (!this.verifyLength(event.target.value, stateNameEqualTo + 1)) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"url\":\n          if (this.verifyUrl(event.target.value)) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"min-value\":\n          if (this.verifyNumber(event.target.value) && event.target.value >= stateNameEqualTo) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"max-value\":\n          if (this.verifyNumber(event.target.value) && event.target.value <= stateNameEqualTo) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        case \"range\":\n          if (this.verifyNumber(event.target.value) && event.target.value >= stateNameEqualTo && event.target.value <= maxValue) {\n            this.setState({\n              [stateName + \"State\"]: \"has-success\"\n            });\n          } else {\n            this.setState({\n              [stateName + \"State\"]: \"has-danger\"\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [stateName]: event.target.value\n      });\n    };\n\n    this.registerClick = () => {\n      if (this.state.registerEmailState === \"\") {\n        this.setState({\n          registerEmailState: \"has-danger\"\n        });\n      }\n\n      if (this.state.registerPasswordState === \"\" || this.state.registerConfirmPasswordState === \"\") {\n        this.setState({\n          registerPasswordState: \"has-danger\"\n        });\n        this.setState({\n          registerConfirmPasswordState: \"has-danger\"\n        });\n      }\n    };\n\n    this.loginClick = () => {\n      if (this.state.loginFullNameState === \"\") {\n        this.setState({\n          loginFullNameState: \"has-danger\"\n        });\n      }\n\n      if (this.state.loginEmailState === \"\") {\n        this.setState({\n          loginEmailState: \"has-danger\"\n        });\n      }\n\n      if (this.state.loginPasswordState === \"\") {\n        this.setState({\n          loginPasswordState: \"has-danger\"\n        });\n      }\n    };\n\n    this.typeClick = () => {\n      if (this.state.requiredState === \"\") {\n        this.setState({\n          requiredState: \"has-danger\"\n        });\n      }\n\n      if (this.state.emailState === \"\") {\n        this.setState({\n          emailState: \"has-danger\"\n        });\n      }\n\n      if (this.state.numberState === \"\") {\n        this.setState({\n          numberState: \"has-danger\"\n        });\n      }\n\n      if (this.state.urlState === \"\") {\n        this.setState({\n          urlState: \"has-danger\"\n        });\n      }\n\n      if (this.state.sourceState === \"\" || this.state.destinationState === \"\") {\n        this.setState({\n          sourceState: \"has-danger\"\n        });\n        this.setState({\n          destinationState: \"has-danger\"\n        });\n      }\n    };\n\n    this.rangeClick = () => {\n      if (this.state.minLengthState === \"\") {\n        this.setState({\n          minLengthState: \"has-danger\"\n        });\n      }\n\n      if (this.state.maxLengthState === \"\") {\n        this.setState({\n          maxLengthState: \"has-danger\"\n        });\n      }\n\n      if (this.state.rangeState === \"\") {\n        this.setState({\n          rangeState: \"has-danger\"\n        });\n      }\n\n      if (this.state.minValueState === \"\") {\n        this.setState({\n          minValueState: \"has-danger\"\n        });\n      }\n\n      if (this.state.maxValueState === \"\") {\n        this.setState({\n          maxValueState: \"has-danger\"\n        });\n      }\n\n      if (this.state.minState === \"\") {\n        this.setState({\n          minState: \"has-danger\"\n        });\n      }\n\n      if (this.state.maxState === \"\") {\n        this.setState({\n          maxState: \"has-danger\"\n        });\n      }\n    };\n\n    this.state = {\n      // register form\n      registerEmail: \"\",\n      registerPassword: \"\",\n      registerConfirmPassword: \"\",\n      registerEmailState: \"\",\n      registerPasswordState: \"\",\n      registerConfirmPasswordState: \"\",\n      // login form\n      loginFullName: \"\",\n      loginEmail: \"\",\n      loginPassword: \"\",\n      loginFullNameState: \"\",\n      loginEmailState: \"\",\n      loginPasswordState: \"\",\n      // type validation form\n      required: \"\",\n      email: \"\",\n      number: \"\",\n      url: \"\",\n      source: \"\",\n      destination: \"\",\n      requiredState: \"\",\n      emailState: \"\",\n      numberState: \"\",\n      urlState: \"\",\n      sourceState: \"\",\n      destinationState: \"\",\n      // range validation form\n      minLength: \"\",\n      maxLength: \"\",\n      range: \"\",\n      min: \"\",\n      max: \"\",\n      minLengthState: \"\",\n      maxLengthState: \"\",\n      rangeState: \"\",\n      minState: \"\",\n      maxState: \"\"\n    };\n  } // function that returns true if value is email, false otherwise\n\n\n  render() {\n    // taking all the states\n    let _this$state = this.state,\n        registerEmailState = _this$state.registerEmailState,\n        registerPasswordState = _this$state.registerPasswordState,\n        registerConfirmPasswordState = _this$state.registerConfirmPasswordState,\n        loginFullNameState = _this$state.loginFullNameState,\n        loginEmailState = _this$state.loginEmailState,\n        loginPasswordState = _this$state.loginPasswordState,\n        requiredState = _this$state.requiredState,\n        emailState = _this$state.emailState,\n        numberState = _this$state.numberState,\n        urlState = _this$state.urlState,\n        sourceState = _this$state.sourceState,\n        destinationState = _this$state.destinationState,\n        minLengthState = _this$state.minLengthState,\n        maxLengthState = _this$state.maxLengthState,\n        rangeState = _this$state.rangeState,\n        minState = _this$state.minState,\n        maxState = _this$state.maxState;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      id: \"RegisterValidation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, \"Register Form\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"has-label \".concat(registerEmailState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 23\n      }\n    }, \"Email Address *\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      type: \"email\",\n      onChange: e => this.change(e, \"registerEmail\", \"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 23\n      }\n    }), this.state.registerEmailState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, \"Please enter a valid email address.\") : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"has-label \".concat(registerPasswordState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 23\n      }\n    }, \"Password *\"), /*#__PURE__*/React.createElement(Input, {\n      id: \"registerPassword\",\n      name: \"password\",\n      type: \"password\",\n      autoComplete: \"off\",\n      onChange: e => this.change(e, \"registerPassword\", \"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 23\n      }\n    }), this.state.registerPasswordState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }, \"This field is required.\") : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"has-label \".concat(registerConfirmPasswordState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, \"Confirm Password *\"), /*#__PURE__*/React.createElement(Input, {\n      equalto: \"#registerPassword\",\n      id: \"registerPasswordConfirmation\",\n      name: \"password_confirmation\",\n      type: \"password\",\n      autoComplete: \"off\",\n      onChange: e => this.change(e, \"registerConfirmPassword\", \"equalTo\", \"registerPassword\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 23\n      }\n    }), this.state.registerConfirmPasswordState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, \"This field is required.\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category form-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, \"* Required fields\")), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      className: \"pull-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"optionCheckboxes\",\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-check-sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    }), \"Subscribe to newsletter\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.registerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }\n    }, \"Register\"))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      id: \"LoginValidation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    }, \"Login Form\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"has-label \".concat(loginFullNameState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 23\n      }\n    }, \"Full Name *\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"fullname\",\n      type: \"text\",\n      onChange: e => this.change(e, \"loginFullName\", \"length\", 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 23\n      }\n    }), this.state.loginFullNameState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 25\n      }\n    }, \"This field is required.\") : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"has-label \".concat(loginEmailState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 23\n      }\n    }, \"Email Address *\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      type: \"email\",\n      onChange: e => this.change(e, \"loginEmail\", \"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 23\n      }\n    }), this.state.loginEmailState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 25\n      }\n    }, \"Please enter a valid email address.\") : null), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"has-label \".concat(loginPasswordState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 23\n      }\n    }, \"Password *\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      type: \"password\",\n      autoComplete: \"off\",\n      onChange: e => this.change(e, \"loginPassword\", \"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 23\n      }\n    }), this.state.loginPasswordState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 25\n      }\n    }, \"This field is required.\") : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category form-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }\n    }, \"* Required fields\")), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.loginClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }\n    }, \"Register\"))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form-horizontal\",\n      id: \"TypeValidation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    }, \"Type Validation\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 23\n      }\n    }, \"Required Text\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: requiredState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"required\",\n      type: \"text\",\n      onChange: e => this.change(e, \"required\", \"length\", 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 27\n      }\n    }), this.state.requiredState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 29\n      }\n    }, \"This field is required.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, \"required\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 23\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: emailState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      type: \"text\",\n      onChange: e => this.change(e, \"email\", \"email\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 27\n      }\n    }), this.state.emailState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 29\n      }\n    }, \"Please enter a valid email address.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }, \"email=\\\"true\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 23\n      }\n    }, \"Number\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: numberState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"number\",\n      type: \"text\",\n      onChange: e => this.change(e, \"number\", \"number\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 27\n      }\n    }), this.state.numberState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 29\n      }\n    }, \"Please enter a valid number.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 25\n      }\n    }, \"number=\\\"true\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 23\n      }\n    }, \"Url\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: urlState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"url\",\n      type: \"text\",\n      onChange: e => this.change(e, \"url\", \"url\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 27\n      }\n    }), this.state.urlState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 29\n      }\n    }, \"Please enter a valid URL.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 25\n      }\n    }, \"url=\\\"true\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 23\n      }\n    }, \"Equal to\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: sourceState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"idSource\",\n      placeholder: \"#idSource\",\n      type: \"text\",\n      onChange: e => this.change(e, \"source\", \"equalTo\", \"destination\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: destinationState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"idDestination\",\n      placeholder: \"#idDestination\",\n      type: \"text\",\n      onChange: e => this.change(e, \"destination\", \"equalTo\", \"source\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 27\n      }\n    }), this.state.destinationState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 29\n      }\n    }, \"Please enter the same value.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 25\n      }\n    }, \"equalTo=\\\"#idSource\\\"\")))), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.typeClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 21\n      }\n    }, \"Validate Inputs\"))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form-horizontal\",\n      id: \"RangeValidation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }\n    }, \"Range Validation\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 23\n      }\n    }, \"Min Length\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: minLengthState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"min_length\",\n      type: \"text\",\n      onChange: e => this.change(e, \"minLength\", \"length\", 5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 27\n      }\n    }), this.state.minLengthState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 29\n      }\n    }, \"Please enter at least 5 characters.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 25\n      }\n    }, \"minLength=\\\"5\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 23\n      }\n    }, \"Max Length\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: maxLengthState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"max_length\",\n      type: \"text\",\n      onChange: e => this.change(e, \"maxLength\", \"max-length\", 5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 27\n      }\n    }), this.state.maxLengthState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 29\n      }\n    }, \"Please enter 5 or less characters.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 25\n      }\n    }, \"maxLength=\\\"5\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 23\n      }\n    }, \"Range\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: rangeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"range\",\n      type: \"text\",\n      onChange: e => this.change(e, \"range\", \"range\", 6, 10),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 27\n      }\n    }), this.state.rangeState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 29\n      }\n    }, \"Please enter a value between 6 and 10.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 25\n      }\n    }, \"range=\\\"[6,10]\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 23\n      }\n    }, \"Min Value\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: minState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"min\",\n      type: \"text\",\n      onChange: e => this.change(e, \"min\", \"min-value\", 6),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 27\n      }\n    }), this.state.minState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 29\n      }\n    }, \"Please enter a value greater than or equal to 6.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 25\n      }\n    }, \"min=\\\"6\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 23\n      }\n    }, \"Max Value\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: maxState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"max\",\n      type: \"text\",\n      onChange: e => this.change(e, \"max\", \"max-value\", 6),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 27\n      }\n    }), this.state.maxState === \"has-danger\" ? /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 29\n      }\n    }, \"Please enter a value less than or equal to 6.\") : null)), /*#__PURE__*/React.createElement(Col, {\n      className: \"label-on-right\",\n      tag: \"label\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 25\n      }\n    }, \"max=\\\"6\\\"\")))), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.rangeClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 21\n      }\n    }, \"Validate Inputs\"))))))));\n  }\n\n}\n\nexport default ValidationForms;","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole/src/views/forms/ValidationForms.js"],"names":["React","Button","Card","CardHeader","CardBody","CardFooter","CardTitle","Label","FormGroup","Form","Input","Row","Col","ValidationForms","Component","constructor","props","verifyEmail","value","emailRex","test","verifyLength","length","compare","string1","string2","verifyNumber","numberRex","RegExp","verifyUrl","URL","_","change","event","stateName","type","stateNameEqualTo","maxValue","target","setState","state","registerClick","registerEmailState","registerPasswordState","registerConfirmPasswordState","loginClick","loginFullNameState","loginEmailState","loginPasswordState","typeClick","requiredState","emailState","numberState","urlState","sourceState","destinationState","rangeClick","minLengthState","maxLengthState","rangeState","minValueState","maxValueState","minState","maxState","registerEmail","registerPassword","registerConfirmPassword","loginFullName","loginEmail","loginPassword","required","email","number","url","source","destination","minLength","maxLength","range","min","max","render","e"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Paper Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Label,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass ValidationForms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // register form\n      registerEmail: \"\",\n      registerPassword: \"\",\n      registerConfirmPassword: \"\",\n      registerEmailState: \"\",\n      registerPasswordState: \"\",\n      registerConfirmPasswordState: \"\",\n      // login form\n      loginFullName: \"\",\n      loginEmail: \"\",\n      loginPassword: \"\",\n      loginFullNameState: \"\",\n      loginEmailState: \"\",\n      loginPasswordState: \"\",\n      // type validation form\n      required: \"\",\n      email: \"\",\n      number: \"\",\n      url: \"\",\n      source: \"\",\n      destination: \"\",\n      requiredState: \"\",\n      emailState: \"\",\n      numberState: \"\",\n      urlState: \"\",\n      sourceState: \"\",\n      destinationState: \"\",\n      // range validation form\n      minLength: \"\",\n      maxLength: \"\",\n      range: \"\",\n      min: \"\",\n      max: \"\",\n      minLengthState: \"\",\n      maxLengthState: \"\",\n      rangeState: \"\",\n      minState: \"\",\n      maxState: \"\",\n    };\n  }\n  // function that returns true if value is email, false otherwise\n  verifyEmail = (value) => {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (emailRex.test(value)) {\n      return true;\n    }\n    return false;\n  };\n  // function that verifies if a string has a given length or not\n  verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n  // function that verifies if two strings are equal\n  compare = (string1, string2) => {\n    if (string1 === string2) {\n      return true;\n    }\n    return false;\n  };\n  // function that verifies if value contains only numbers\n  verifyNumber = (value) => {\n    var numberRex = new RegExp(\"^[0-9]+$\");\n    if (numberRex.test(value)) {\n      return true;\n    }\n    return false;\n  };\n  // verifies if value is a valid URL\n  verifyUrl = (value) => {\n    try {\n      new URL(value);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n  change = (event, stateName, type, stateNameEqualTo, maxValue) => {\n    switch (type) {\n      case \"email\":\n        if (this.verifyEmail(event.target.value)) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"password\":\n        if (this.verifyLength(event.target.value, 1)) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"equalTo\":\n        if (this.compare(event.target.value, this.state[stateNameEqualTo])) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n          this.setState({ [stateNameEqualTo + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n          this.setState({ [stateNameEqualTo + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"number\":\n        if (this.verifyNumber(event.target.value)) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"length\":\n        if (this.verifyLength(event.target.value, stateNameEqualTo)) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"max-length\":\n        if (!this.verifyLength(event.target.value, stateNameEqualTo + 1)) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"url\":\n        if (this.verifyUrl(event.target.value)) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"min-value\":\n        if (\n          this.verifyNumber(event.target.value) &&\n          event.target.value >= stateNameEqualTo\n        ) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"max-value\":\n        if (\n          this.verifyNumber(event.target.value) &&\n          event.target.value <= stateNameEqualTo\n        ) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      case \"range\":\n        if (\n          this.verifyNumber(event.target.value) &&\n          event.target.value >= stateNameEqualTo &&\n          event.target.value <= maxValue\n        ) {\n          this.setState({ [stateName + \"State\"]: \"has-success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"has-danger\" });\n        }\n        break;\n      default:\n        break;\n    }\n    this.setState({ [stateName]: event.target.value });\n  };\n  registerClick = () => {\n    if (this.state.registerEmailState === \"\") {\n      this.setState({ registerEmailState: \"has-danger\" });\n    }\n    if (\n      this.state.registerPasswordState === \"\" ||\n      this.state.registerConfirmPasswordState === \"\"\n    ) {\n      this.setState({ registerPasswordState: \"has-danger\" });\n      this.setState({ registerConfirmPasswordState: \"has-danger\" });\n    }\n  };\n  loginClick = () => {\n    if (this.state.loginFullNameState === \"\") {\n      this.setState({ loginFullNameState: \"has-danger\" });\n    }\n    if (this.state.loginEmailState === \"\") {\n      this.setState({ loginEmailState: \"has-danger\" });\n    }\n    if (this.state.loginPasswordState === \"\") {\n      this.setState({ loginPasswordState: \"has-danger\" });\n    }\n  };\n  typeClick = () => {\n    if (this.state.requiredState === \"\") {\n      this.setState({ requiredState: \"has-danger\" });\n    }\n    if (this.state.emailState === \"\") {\n      this.setState({ emailState: \"has-danger\" });\n    }\n    if (this.state.numberState === \"\") {\n      this.setState({ numberState: \"has-danger\" });\n    }\n    if (this.state.urlState === \"\") {\n      this.setState({ urlState: \"has-danger\" });\n    }\n    if (this.state.sourceState === \"\" || this.state.destinationState === \"\") {\n      this.setState({ sourceState: \"has-danger\" });\n      this.setState({ destinationState: \"has-danger\" });\n    }\n  };\n  rangeClick = () => {\n    if (this.state.minLengthState === \"\") {\n      this.setState({ minLengthState: \"has-danger\" });\n    }\n    if (this.state.maxLengthState === \"\") {\n      this.setState({ maxLengthState: \"has-danger\" });\n    }\n    if (this.state.rangeState === \"\") {\n      this.setState({ rangeState: \"has-danger\" });\n    }\n    if (this.state.minValueState === \"\") {\n      this.setState({ minValueState: \"has-danger\" });\n    }\n    if (this.state.maxValueState === \"\") {\n      this.setState({ maxValueState: \"has-danger\" });\n    }\n    if (this.state.minState === \"\") {\n      this.setState({ minState: \"has-danger\" });\n    }\n    if (this.state.maxState === \"\") {\n      this.setState({ maxState: \"has-danger\" });\n    }\n  };\n  render() {\n    // taking all the states\n    let {\n      // register form\n      registerEmailState,\n      registerPasswordState,\n      registerConfirmPasswordState,\n      // login form\n      loginFullNameState,\n      loginEmailState,\n      loginPasswordState,\n      // type validation form\n      requiredState,\n      emailState,\n      numberState,\n      urlState,\n      sourceState,\n      destinationState,\n      // range validation form\n      minLengthState,\n      maxLengthState,\n      rangeState,\n      minState,\n      maxState,\n    } = this.state;\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"6\">\n              <Form id=\"RegisterValidation\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle tag=\"h4\">Register Form</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <FormGroup className={`has-label ${registerEmailState}`}>\n                      <label>Email Address *</label>\n                      <Input\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={(e) =>\n                          this.change(e, \"registerEmail\", \"email\")\n                        }\n                      />\n                      {this.state.registerEmailState === \"has-danger\" ? (\n                        <label className=\"error\">\n                          Please enter a valid email address.\n                        </label>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className={`has-label ${registerPasswordState}`}>\n                      <label>Password *</label>\n                      <Input\n                        id=\"registerPassword\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"off\"\n                        onChange={(e) =>\n                          this.change(e, \"registerPassword\", \"password\")\n                        }\n                      />\n                      {this.state.registerPasswordState === \"has-danger\" ? (\n                        <label className=\"error\">This field is required.</label>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup\n                      className={`has-label ${registerConfirmPasswordState}`}\n                    >\n                      <label>Confirm Password *</label>\n                      <Input\n                        equalto=\"#registerPassword\"\n                        id=\"registerPasswordConfirmation\"\n                        name=\"password_confirmation\"\n                        type=\"password\"\n                        autoComplete=\"off\"\n                        onChange={(e) =>\n                          this.change(\n                            e,\n                            \"registerConfirmPassword\",\n                            \"equalTo\",\n                            \"registerPassword\"\n                          )\n                        }\n                      />\n                      {this.state.registerConfirmPasswordState ===\n                      \"has-danger\" ? (\n                        <label className=\"error\">This field is required.</label>\n                      ) : null}\n                    </FormGroup>\n                    <div className=\"category form-category\">\n                      * Required fields\n                    </div>\n                  </CardBody>\n                  <CardFooter className=\"text-right\">\n                    <FormGroup check className=\"pull-left\">\n                      <Label check>\n                        <Input name=\"optionCheckboxes\" type=\"checkbox\" />\n                        <span className=\"form-check-sign\" />\n                        Subscribe to newsletter\n                      </Label>\n                    </FormGroup>\n                    <Button color=\"primary\" onClick={this.registerClick}>\n                      Register\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Form>\n            </Col>\n            <Col md=\"6\">\n              <Form id=\"LoginValidation\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle tag=\"h4\">Login Form</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <FormGroup className={`has-label ${loginFullNameState}`}>\n                      <label>Full Name *</label>\n                      <Input\n                        name=\"fullname\"\n                        type=\"text\"\n                        onChange={(e) =>\n                          this.change(e, \"loginFullName\", \"length\", 1)\n                        }\n                      />\n                      {this.state.loginFullNameState === \"has-danger\" ? (\n                        <label className=\"error\">This field is required.</label>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className={`has-label ${loginEmailState}`}>\n                      <label>Email Address *</label>\n                      <Input\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={(e) => this.change(e, \"loginEmail\", \"email\")}\n                      />\n                      {this.state.loginEmailState === \"has-danger\" ? (\n                        <label className=\"error\">\n                          Please enter a valid email address.\n                        </label>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className={`has-label ${loginPasswordState}`}>\n                      <label>Password *</label>\n                      <Input\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"off\"\n                        onChange={(e) =>\n                          this.change(e, \"loginPassword\", \"password\")\n                        }\n                      />\n                      {this.state.loginPasswordState === \"has-danger\" ? (\n                        <label className=\"error\">This field is required.</label>\n                      ) : null}\n                    </FormGroup>\n                    <div className=\"category form-category\">\n                      * Required fields\n                    </div>\n                  </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button color=\"primary\" onClick={this.loginClick}>\n                      Register\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Form>\n            </Col>\n            <Col md=\"12\">\n              <Form className=\"form-horizontal\" id=\"TypeValidation\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle tag=\"h4\">Type Validation</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Label sm=\"2\">Required Text</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={requiredState}>\n                          <Input\n                            name=\"required\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"required\", \"length\", 1)\n                            }\n                          />\n                          {this.state.requiredState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              This field is required.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>required</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Email</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={emailState}>\n                          <Input\n                            name=\"email\"\n                            type=\"text\"\n                            onChange={(e) => this.change(e, \"email\", \"email\")}\n                          />\n                          {this.state.emailState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter a valid email address.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>email=\"true\"</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Number</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={numberState}>\n                          <Input\n                            name=\"number\"\n                            type=\"text\"\n                            onChange={(e) => this.change(e, \"number\", \"number\")}\n                          />\n                          {this.state.numberState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter a valid number.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>number=\"true\"</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Url</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={urlState}>\n                          <Input\n                            name=\"url\"\n                            type=\"text\"\n                            onChange={(e) => this.change(e, \"url\", \"url\")}\n                          />\n                          {this.state.urlState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter a valid URL.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>url=\"true\"</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Equal to</Label>\n                      <Col sm=\"3\">\n                        <FormGroup className={sourceState}>\n                          <Input\n                            id=\"idSource\"\n                            placeholder=\"#idSource\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"source\", \"equalTo\", \"destination\")\n                            }\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col sm=\"3\">\n                        <FormGroup className={destinationState}>\n                          <Input\n                            id=\"idDestination\"\n                            placeholder=\"#idDestination\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"destination\", \"equalTo\", \"source\")\n                            }\n                          />\n                          {this.state.destinationState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter the same value.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"4\">\n                        <code>equalTo=\"#idSource\"</code>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button color=\"primary\" onClick={this.typeClick}>\n                      Validate Inputs\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Form>\n            </Col>\n            <Col md=\"12\">\n              <Form className=\"form-horizontal\" id=\"RangeValidation\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle tag=\"h4\">Range Validation</CardTitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Label sm=\"2\">Min Length</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={minLengthState}>\n                          <Input\n                            name=\"min_length\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"minLength\", \"length\", 5)\n                            }\n                          />\n                          {this.state.minLengthState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter at least 5 characters.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>minLength=\"5\"</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Max Length</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={maxLengthState}>\n                          <Input\n                            name=\"max_length\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"maxLength\", \"max-length\", 5)\n                            }\n                          />\n                          {this.state.maxLengthState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter 5 or less characters.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>maxLength=\"5\"</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Range</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={rangeState}>\n                          <Input\n                            name=\"range\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"range\", \"range\", 6, 10)\n                            }\n                          />\n                          {this.state.rangeState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter a value between 6 and 10.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>range=\"[6,10]\"</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Min Value</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={minState}>\n                          <Input\n                            name=\"min\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"min\", \"min-value\", 6)\n                            }\n                          />\n                          {this.state.minState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter a value greater than or equal to 6.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>min=\"6\"</code>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Label sm=\"2\">Max Value</Label>\n                      <Col sm=\"7\">\n                        <FormGroup className={maxState}>\n                          <Input\n                            name=\"max\"\n                            type=\"text\"\n                            onChange={(e) =>\n                              this.change(e, \"max\", \"max-value\", 6)\n                            }\n                          />\n                          {this.state.maxState === \"has-danger\" ? (\n                            <label className=\"error\">\n                              Please enter a value less than or equal to 6.\n                            </label>\n                          ) : null}\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"label-on-right\" tag=\"label\" sm=\"3\">\n                        <code>max=\"6\"</code>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button color=\"primary\" onClick={this.rangeClick}>\n                      Validate Inputs\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Form>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ValidationForms;\n"]},"metadata":{},"sourceType":"module"}