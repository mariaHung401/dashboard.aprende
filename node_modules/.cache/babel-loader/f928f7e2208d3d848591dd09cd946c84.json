{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/a.micole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/a.micole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport const setColegio = (colegio, grado) => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          dispatch({\n            type: 'set_colegio',\n            payload: [colegio, grado]\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const verColegio = () => /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          dispatch({\n            type: 'ver_colegio'\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport const setArchivoSubir = archivo => dispatch => {\n  dispatch({\n    type: 'set_archivosubir',\n    payload: archivo\n  });\n}; // export const setMensaje = () => async (dispatch) => {\n//   dispatch({\n//     type: 'set_mensaje',\n//   })\n// }\n\nexport const verAlumnos = (id, grado) => /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n    var url, respuesta, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (grado != \"\" || grado !== undefined) {\n            grado = grado.substr(3, 6).toUpperCase();\n          }\n\n          url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/veralumnos?id=' + id + '&grado=' + grado;\n          _context3.next = 4;\n          return fetch(url, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            Accept: 'application/json'\n          }).catch(error => {\n            console.log(error);\n          });\n\n        case 4:\n          respuesta = _context3.sent;\n          _context3.next = 7;\n          return respuesta.json();\n\n        case 7:\n          result = _context3.sent;\n          dispatch({\n            type: 'ver_alumnos',\n            payload: result\n          });\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport const verCredenciales = () => /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n    var url, respuesta, insercion;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/creds';\n          _context4.next = 3;\n          return fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'default',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            Accept: 'application/json'\n          }).catch(error => {\n            console.log(error);\n          });\n\n        case 3:\n          respuesta = _context4.sent;\n          _context4.next = 6;\n          return respuesta.json();\n\n        case 6:\n          insercion = _context4.sent;\n          dispatch({\n            type: 'ver_credenciales',\n            payload: insercion\n          });\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n\n  return function (_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/macbook/Desktop/a.micole/src/actions/mainActions.js"],"names":["setColegio","colegio","grado","dispatch","type","payload","verColegio","setArchivoSubir","archivo","verAlumnos","id","undefined","substr","toUpperCase","url","fetch","method","headers","Accept","catch","error","console","log","respuesta","json","result","verCredenciales","mode","cache","insercion"],"mappings":"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","sourcesContent":["export const setColegio = (colegio, grado) => async (dispatch) => {\n  dispatch({\n    type: 'set_colegio',\n    payload:[colegio,grado]\n  })\n}\nexport const verColegio= () => async (dispatch) => {\n  dispatch({\n    type: 'ver_colegio',\n  })\n}\nexport const setArchivoSubir = (archivo) =>  (dispatch) => {\n  dispatch({\n    type: 'set_archivosubir',\n    payload: archivo\n  })\n}\n// export const setMensaje = () => async (dispatch) => {\n//   dispatch({\n//     type: 'set_mensaje',\n//   })\n// }\n\nexport const verAlumnos = (id,grado) => async (dispatch) => {\n  if(grado!=\"\" || grado!==undefined){\n    grado=grado.substr(3,6).toUpperCase();\n  }\n  let url='https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/veralumnos?id='+id+'&grado='+grado;\n  let respuesta = await fetch(url, {\n      method: 'GET',\n      headers:{\n          'Content-Type': 'application/json'\n      },\n      Accept: 'application/json',\n  })\n  .catch(error => {\n      console.log(error);\n  });\n  let result = await respuesta.json();\n  dispatch({\n    type: 'ver_alumnos',\n    payload: result\n  });\n}\n\nexport const verCredenciales =  () => async (dispatch) => {\n    const url = 'https://webhooks.mongodb-realm.com/api/client/v2.0/app/aprendemicolegio-kmnsj/service/masterside/incoming_webhook/creds';\n    let respuesta = await fetch(url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'default',\n        headers:{\n            'Content-Type': 'application/json'\n        },\n        Accept: 'application/json',\n    }).catch(error => {\n        console.log(error);\n    });\n    let insercion = await respuesta.json();\n    dispatch({\n        type: 'ver_credenciales',\n        payload: insercion\n    });\n  }\n"]},"metadata":{},"sourceType":"module"}